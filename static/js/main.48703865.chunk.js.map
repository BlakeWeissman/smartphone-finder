{"version":3,"sources":["Card.js","Phone.js","PhoneList.js","Result.js","App.js","serviceWorker.js","index.js"],"names":["Card","_Component","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","key","value","react_default","a","createElement","className","href","props","link","target","style","backgroundImage","img","name","price","desc","Component","Phone","os","year","res","size","cpu","ram","headphone","PhoneList","Result","_this","call","state","phones","arg","Card_Card","_this2","map","phone","renderCard","App","priceChange","bind","assertThisInitialized","event","parseInt","document","getElementById","isNaN","setState","id","onChange","Result_Result","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.48703865.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport './App.css';\r\n\r\nexport class Card extends Component {\r\n  render() {\r\n    return (\r\n        <div className=\"card text-center\">\r\n            <div className=\"card-wrap\">    \r\n                <a href={this.props.link} target=\"_blank\">\r\n                    <div className=\"card-image\" style={{backgroundImage: \"url(\" + this.props.img + \")\"}}>\r\n                    </div>\r\n                </a>\r\n                <div className=\"card-content\">\r\n                    <h2 className=\"card-content\">{this.props.name}</h2>         \r\n                    <h3 className=\"card-content\">{\"$\" + this.props.price}</h3>\r\n                    <p className=\"card-content\">{this.props.desc}</p>\r\n                    <div className=\"button-wrap\">\r\n                        <a className=\"button1\" href={this.props.link} target=\"_blank\">Learn More</a>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n  }\r\n}","export class Phone {\r\n    constructor(name, desc, link, img, price, os, year, res, size, cpu, ram, headphone) {\r\n        this.name = name;\r\n        this.desc = desc;\r\n        this.link = link;\r\n        this.img = img;\r\n        this.price = price;\r\n        this.os = os;\r\n        this.year = year;\r\n        this.res = res;\r\n        this.size = size;\r\n        this.cpu = cpu;\r\n        this.ram = ram;\r\n        this.headphone = headphone;\r\n    }\r\n}","import { Phone } from \"./Phone.js\";\r\n\r\nexport const PhoneList = [\r\n    new Phone(\r\n        \"iPhone XS\", \r\n        \"Welcome to the big screens. Super Retina in two sizes â€” including the largest display ever on an iPhone. The most powerful chip in a smartphone.\", \r\n        \"https://www.apple.com/iphone-xs/\", \r\n        \"img/iphonexs.jpg\", \r\n        999.99,\r\n        \"iOS\", \r\n        \"2018\", \r\n        \"2436x1125\", \r\n        \"Apple A12 Bionic\", \r\n        \"4gb\", \r\n        false\r\n    ),\r\n    new Phone(\r\n        \"Samsung Galaxy S10\", \r\n        \"After 10 years of mobile pioneering firsts, it's time to meet our latest and greatest innovation yet. Introducing the Galaxy S10. The next generation has arrived.\", \r\n        \"https://www.samsung.com/us/mobile/galaxy-s10/\", \r\n        \"img/s10.jpg\",\r\n        899.99, \r\n        \"Android\", \r\n        \"2019\", \r\n        \"3040x1440\", \r\n        \"Snapdragon 855\", \r\n        \"8gb\", \r\n        true\r\n    ),\r\n    new Phone(\r\n        \"Google Pixel 3\", \r\n        \"Meet the Google Pixel 3. Explore your world with Google Lens. Capture breathtaking photos using Portrait Mode. Screen phone calls and get answers with Google.\", \r\n        \"https://store.google.com/us/product/pixel_3?hl=en-US\", \r\n        \"img/pixel3.jpg\", \r\n        799.99,\r\n        \"Android\", \r\n        \"2018\", \r\n        \"2160x1080\", \r\n        \"Snapdragon 845\", \r\n        \"4gb\", \r\n        false\r\n    ),\r\n    new Phone(\r\n        \"OnePlus 6T\", \r\n        \"OnePlus 6T comes equipped with Screen Unlock, an in-display fingerprint sensor technology. Prepare to Unlock The Speed with 8GB RAM and up to 256GB.\", \r\n        \"https://www.oneplus.com/6t\", \r\n        \"img/oneplus6t.jpg\",\r\n        579.99, \r\n        \"Android\", \r\n        \"2018\", \r\n        \"2280x1080\", \r\n        \"Snapdragon 845\", \r\n        \"8gb\", \r\n        false\r\n    ),\r\n]","import React, { Component } from \"react\";\r\nimport { Card } from \"./Card.js\";\r\nimport { PhoneList } from \"./PhoneList.js\"\r\n\r\nexport class Result extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            phones: PhoneList\r\n        }\r\n    }\r\n\r\n    //Function that determines if a card should render based on the price filter\r\n    renderCard(arg) { \r\n        if (arg.price >= this.props.price) {\r\n            return <Card name={arg.name} desc={arg.desc} link={arg.link} img={arg.img} price={arg.price} />; \r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"app-display wrap flex\">\r\n                {this.state.phones.map((phone) =>\r\n                    this.renderCard(phone)\r\n                )}\r\n            </div>\r\n        );\r\n    }\r\n}","import React, { Component } from \"react\";\r\nimport \"./App.css\";\r\nimport { Result } from \"./Result.js\";\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { \r\n      price: 0\r\n    }\r\n    this.priceChange = this.priceChange.bind(this);\r\n  }\r\n\r\n  //Function that runs if the price filter is changed\r\n  priceChange(event) {\r\n    let value = parseInt(document.getElementById(\"filter-price\").value);\r\n    if (isNaN(value) === false) {     \r\n      this.setState({price: parseInt(document.getElementById(\"filter-price\").value)});\r\n    } \r\n    else {\r\n      this.setState({price: 0});\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"app\">\r\n        <div className=\"app-header background-dark\">\r\n          <div className=\"wrap app-header-wrap flex\">\r\n            <div className=\"app-header-left\">\r\n              <h2 className=\"color-light\">Smartphone Finder Prototype</h2>\r\n              <p className=\"color-light\">created by <a href=\"http://blakeweissman.com/\" className=\"color-light buttonless\" target=\"_blank\">Blake Weissman</a></p>\r\n            </div>\r\n            <div className=\"app-header-right\">\r\n              <p className=\"color-light\">Price:</p>\r\n              <input className=\"app-header-input\" id=\"filter-price\" onChange={this.priceChange} />\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <Result price={this.state.price} />\r\n        <footer className=\"background-dark\">\r\n          <p className=\"footer color-light text-center\">&copy;2019 <a href=\"http://blakeweissman.com/\" className=\"color-light buttonless\" target=\"_blank\">Blake Weissman</a></p>\r\n        </footer>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}